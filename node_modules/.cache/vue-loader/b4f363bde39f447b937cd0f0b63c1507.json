{"remainingRequest":"/Users/yangzhi/IdeaProjects/runzhi1213/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yangzhi/IdeaProjects/runzhi1213/src/views/Admin/Dictionary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yangzhi/IdeaProjects/runzhi1213/src/views/Admin/Dictionary.vue","mtime":1639114452817},{"path":"/Users/yangzhi/IdeaProjects/runzhi1213/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangzhi/IdeaProjects/runzhi1213/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yangzhi/IdeaProjects/runzhi1213/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangzhi/IdeaProjects/runzhi1213/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      loading: true,\n      dialogFormVisible: false,\n      formLabelWidth: \"120px\",\n      tableData: [],\n      formData: {\n        Id: 0,\n        Key: \"\",\n        Content: \"\",\n        CreateTime: new Date()\n      },\n      options: {}\n    };\n  },\n  mounted() {\n    let token = \"Browser \" + sessionStorage.getItem(\"token\");\n    //window.console.log(token);\n    this.options = {\n      headers: {\n        Authorization: token\n      }\n    };\n\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      this.loading = true;\n      this.$http\n        .get(`DataDictionary/GetDataDictionaryAll?key=`)\n        .then(response => {\n          window.console.log(response);\n          this.tableData = response.data;\n          this.loading = false;\n        })\n        .catch(e => {\n          this.$message({\n            message: \"网络或程序异常！\" + e,\n            type: \"error\"\n          });\n        });\n    },\n    openDialog() {\n      // 清除数据\n      this.formData.Id = 0;\n      this.formData.Key = \"\";\n      this.formData.Content = \"\";\n      this.formData.CreateTime = new Date();\n\n      this.dialogFormVisible = true;\n    },\n    // 新增\n    handleCreateOrModify() {\n      window.console.log(this.formData);\n      //window.console.log(JSON.stringify(this.formData));\n      if (!this.formData.Id) {\n        // ID 无效时 视为新增\n        this.loading = true;\n        this.$http\n          .post(\n            \"DataDictionary/CreateDataDictionary\",\n            this.formData,\n            this.options\n          )\n          .then(response => {\n            this.loading = false;\n            window.console.log(response);\n            this.$message({\n              message: \"创建成功！\",\n              type: \"success\"\n            });\n            this.dialogFormVisible = false;\n            this.loadData();\n          })\n          .catch(e => {\n            this.$message({\n              message: \"网络或程序异常！\" + e,\n              type: \"error\"\n            });\n          });\n      } else {\n        this.loading = true;\n        this.$http\n          .post(\n            \"DataDictionary/ModifiedDataDictionary\",\n            this.formData,\n            this.options\n          )\n          .then(response => {\n            this.loading = false;\n            window.console.log(response);\n            this.$message({\n              message: \"修改成功！\",\n              type: \"success\"\n            });\n            this.dialogFormVisible = false;\n            this.loadData();\n          })\n          .catch(e => {\n            this.$message({\n              message: \"网络或程序异常！\" + e,\n              type: \"error\"\n            });\n          });\n      }\n    },\n    handleEdit(index, row) {\n      window.console.log(index, row);\n      this.formData = row;\n      this.dialogFormVisible = true;\n    },\n    handleDelete(index, row) {\n      window.console.log(index, row);\n      this.$confirm(\"此操作将永久此条数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          // 已确认删除\n          // 调接口删除\n          this.loading = true;\n          this.$http\n            .post(\n              `DataDictionary/DeleteDataDictionary?id=${row.Id}`,\n              null,\n              this.options\n            )\n            .then(response => {\n              this.loading = false;\n              window.console.log(response);\n              this.$message({\n                message: \"删除成功！\",\n                type: \"success\"\n              });\n              this.loadData();\n            })\n            .catch(e => {\n              this.$message({\n                message: \"网络或程序异常！\" + e,\n                type: \"error\"\n              });\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    //时间格式化\n    dateFormat: function(row) {\n      //row 表示一行数据, CreateTime 表示要格式化的字段名称\n      let t = new Date(row.CreateTime);\n      return t.getFullYear() + \"-\" + (t.getMonth() + 1) + \"-\" + t.getDate();\n    }\n  }\n};\n",{"version":3,"sources":["Dictionary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Dictionary.vue","sourceRoot":"src/views/Admin","sourcesContent":["<template>\n  <div class=\"cases\">\n    <el-button type=\"primary\" @click=\"openDialog()\">新增用户</el-button>\n\n    <el-table border :data=\"tableData\" v-loading=\"loading\" style=\"width: 100%\">\n      <el-table-column prop=\"Id\" label=\"序号\" width=\"180\"></el-table-column>\n      <el-table-column prop=\"Key\" label=\"键\" width=\"180\"></el-table-column>\n      <el-table-column prop=\"Content\" label=\"值\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            @click=\"handleEdit(scope.$index, scope.row)\"\n          ></el-button>\n          <el-button\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.$index, scope.row)\"\n          ></el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog title=\"案例编辑\" :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"formData\">\n        <el-form-item label=\"数据键\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"formData.Key\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"数据键\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"formData.Content\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCreateOrModify()\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      loading: true,\n      dialogFormVisible: false,\n      formLabelWidth: \"120px\",\n      tableData: [],\n      formData: {\n        Id: 0,\n        Key: \"\",\n        Content: \"\",\n        CreateTime: new Date()\n      },\n      options: {}\n    };\n  },\n  mounted() {\n    let token = \"Browser \" + sessionStorage.getItem(\"token\");\n    //window.console.log(token);\n    this.options = {\n      headers: {\n        Authorization: token\n      }\n    };\n\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      this.loading = true;\n      this.$http\n        .get(`DataDictionary/GetDataDictionaryAll?key=`)\n        .then(response => {\n          window.console.log(response);\n          this.tableData = response.data;\n          this.loading = false;\n        })\n        .catch(e => {\n          this.$message({\n            message: \"网络或程序异常！\" + e,\n            type: \"error\"\n          });\n        });\n    },\n    openDialog() {\n      // 清除数据\n      this.formData.Id = 0;\n      this.formData.Key = \"\";\n      this.formData.Content = \"\";\n      this.formData.CreateTime = new Date();\n\n      this.dialogFormVisible = true;\n    },\n    // 新增\n    handleCreateOrModify() {\n      window.console.log(this.formData);\n      //window.console.log(JSON.stringify(this.formData));\n      if (!this.formData.Id) {\n        // ID 无效时 视为新增\n        this.loading = true;\n        this.$http\n          .post(\n            \"DataDictionary/CreateDataDictionary\",\n            this.formData,\n            this.options\n          )\n          .then(response => {\n            this.loading = false;\n            window.console.log(response);\n            this.$message({\n              message: \"创建成功！\",\n              type: \"success\"\n            });\n            this.dialogFormVisible = false;\n            this.loadData();\n          })\n          .catch(e => {\n            this.$message({\n              message: \"网络或程序异常！\" + e,\n              type: \"error\"\n            });\n          });\n      } else {\n        this.loading = true;\n        this.$http\n          .post(\n            \"DataDictionary/ModifiedDataDictionary\",\n            this.formData,\n            this.options\n          )\n          .then(response => {\n            this.loading = false;\n            window.console.log(response);\n            this.$message({\n              message: \"修改成功！\",\n              type: \"success\"\n            });\n            this.dialogFormVisible = false;\n            this.loadData();\n          })\n          .catch(e => {\n            this.$message({\n              message: \"网络或程序异常！\" + e,\n              type: \"error\"\n            });\n          });\n      }\n    },\n    handleEdit(index, row) {\n      window.console.log(index, row);\n      this.formData = row;\n      this.dialogFormVisible = true;\n    },\n    handleDelete(index, row) {\n      window.console.log(index, row);\n      this.$confirm(\"此操作将永久此条数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          // 已确认删除\n          // 调接口删除\n          this.loading = true;\n          this.$http\n            .post(\n              `DataDictionary/DeleteDataDictionary?id=${row.Id}`,\n              null,\n              this.options\n            )\n            .then(response => {\n              this.loading = false;\n              window.console.log(response);\n              this.$message({\n                message: \"删除成功！\",\n                type: \"success\"\n              });\n              this.loadData();\n            })\n            .catch(e => {\n              this.$message({\n                message: \"网络或程序异常！\" + e,\n                type: \"error\"\n              });\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    //时间格式化\n    dateFormat: function(row) {\n      //row 表示一行数据, CreateTime 表示要格式化的字段名称\n      let t = new Date(row.CreateTime);\n      return t.getFullYear() + \"-\" + (t.getMonth() + 1) + \"-\" + t.getDate();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.el-table {\n  margin-top: 20px;\n}\n</style>"]}]}